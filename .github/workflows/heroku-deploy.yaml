name: Heroku Deploy
on:
  push:
    branches:
      - 'main'
      - 'deploy'
  pull_request:
    branches:
      - 'main'

jobs:
  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: 'postgres'
          POSTGRES_DB: 'test-db'
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          steps:
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # fetch complete commit history on all branches
          fetch-depth: 0
      - name: Install Dependencies
        run: npm install
      - name: Test Suite
        run: npm run test:unit
        env:
          DATABASE_URL: postgres://localhost:5432/test-db

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set Heroku Credentials
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY 
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      - name: Add Heroku Remote
        run: heroku git:remote -a ${{ secrets.HEROKU_APP_NAME }}
      - name: Push to Heroku
        # github.ref_name is the branch name that triggered the workflow
        # you can assign any branch(es) you like in the on: block at the top of this yaml
        # and the ref_name will pick them up
        run: git push heroku ${{ github.ref_name }}:refs/heads/main
